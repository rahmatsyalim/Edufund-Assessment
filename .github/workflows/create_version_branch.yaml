name: Create Version Branch

on:
  workflow_dispatch:
    branches: [ master ]
    inputs:
      bump_version:
        description: Bump Version
        required: true
        default: Patch
        type: choice
        options:
          - Major
          - Minor
          - Patch

jobs:
  create:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Read Current Version
        id: current_version
        run: |
          props=$(cat app-version.properties)
          version_major=$(echo "$props" | grep -E "version_major=" | cut -d'=' -f2)
          version_minor=$(echo "$props" | grep -E "version_minor=" | cut -d'=' -f2)
          version_patch=$(echo "$props" | grep -E "version_patch=" | cut -d'=' -f2)
          
          echo "major=$version_major" >> "$GITHUB_OUTPUT"
          echo "minor=$version_minor" >> "$GITHUB_OUTPUT"
          echo "patch=$version_patch" >> "$GITHUB_OUTPUT"

      - name: Generate New Version
        id: new_version
        run: |
          bump_version="${{ inputs.bump_version }}"
          major=${{ steps.current_version.outputs.major }}
          minor=${{ steps.current_version.outputs.minor }}
          patch=${{ steps.current_version.outputs.patch }}
          if [ "$bump_version" = "Major" ]; then
            major=$((major + 1))
          elif [ "$bump_version" = "Minor" ]; then
            minor=$((minor + 1))
          elif [ "$bump_version" = "Patch" ]; then
            patch=$((patch + 1))
          fi
          echo "major=$major" >> "$GITHUB_OUTPUT"
          echo "minor=$minor" >> "$GITHUB_OUTPUT"
          echo "patch=$patch" >> "$GITHUB_OUTPUT"
          echo "name=v$major.$minor.$patch" >> "$GITHUB_OUTPUT"
#
#      - name: Create Branch
#        run: |
#          version_name="${{ steps.new_version.outputs.name }}"
#          git config user.name github-actions
#          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
#          git checkout -b "$version_name"
#          jq '(.version.major = ${{ steps.new_version.outputs.major }}) | (.version.minor = ${{ steps.new_version.outputs.minor }}) | (.version.patch = ${{ steps.new_version.outputs.patch }})' app_version.json > app_version.json.tmp && mv app_version.json.tmp app_version.json
#          git add .
#          git commit -m "Bumped version to $version_name"
#          git push origin "$version_name"